-- 1번
SELECT JOB_NAME
FROM JOB;

-- 2번
SELECT *
FROM DEPARTMENT;

-- 3번
SELECT EMP_NAME, EMAIL, PHONE, HIRE_DATE
FROM EMPLOYEE;

-- 4번
SELECT HIRE_DATE, EMP_NAME, SALARY
FROM EMPLOYEE;

-- 5번
SELECT EMP_NAME, SAL_LEVEL
FROM EMPLOYEE
WHERE SALARY >= 2500000;

-- 6번
SELECT EMP_NAME, PHONE
FROM EMPLOYEE
WHERE JOB_CODE = 'J3' AND SALARY >= 3500000;

-- 연봉
SELECT EMP_NAME, SALARY * 12
FROM EMPLOYEE;

-- 보너스 금액
SELECT EMP_NAME, SALARY * BONUS "연봉"
FROM EMPLOYEE;

-- 보너스 금액 + 연봉
SELECT EMP_NAME, (SALARY * 12) * (1 + BONUS) AS "연봉(보너스)", '원' AS "단위"
FROM EMPLOYEE
WHERE (SALARY * 12) * (1 + BONUS) IS NOT NULL;

DESC EMPLOYEE;

-- @ 실습 문제 2 --

-- 1번
SELECT EMP_NAME AS "이름", SALARY * 12 AS "연봉", SALARY * BONUS * 12 + SALARY * 12 AS "총 수령액",
(SALARY * BONUS * 12 + SALARY * 12) - (SALARY * 0.03 * 12) AS "실수령액"
FROM EMPLOYEE
WHERE SALARY * BONUS * 12 + SALARY * 12 IS NOT NULL;
-- NVL(SALARY * BONUS * 12 + SALARY * 12, 0) (null) -> 0


-- 2번
SELECT EMP_NAME AS "이름", ROUND (SYSDATE - HIRE_DATE, 0) AS "근무일수", '일' AS " "
FROM EMPLOYEE
ORDER BY SYSDATE - HIRE_DATE DESC;

-- 3번
SELECT EMP_NAME AS "이름", SALARY AS "월급", BONUS AS "보너스율", '%' AS " "
FROM EMPLOYEE
WHERE (SYSDATE - HIRE_DATE) / 365 >= 20 AND BONUS IS NOT NULL
ORDER BY EMP_NAME;


-- DISTINCT
SELECT DISTINCT DEPT_CODE
FROM EMPLOYEE ;

SELECT EMP_NAME, SALARY || '원' AS "월급"
FROM EMPLOYEE;


SELECT EMP_NAME AS "이름",   '폰번호 : ' || PHONE AS "휴대폰"
FROM EMPLOYEE;

SELECT EMP_NAME AS "이름", '급여 : ' || SALARY || '  /  보너스율 : ' || NVL(BONUS* 100, 0) || '%' AS "급여 및 보너스율"
FROM EMPLOYEE;

SELECT EMP_NAME AS "이름", SALARY AS "급여"
FROM EMPLOYEE
WHERE SALARY BETWEEN 3500000 AND 6500000;

SELECT EMP_NAME AS "이름", SALARY || '원' AS "급여"
FROM EMPLOYEE
WHERE SALARY >= 3500000 AND 6500000  >= SALARY;

SELECT *
FROM EMPLOYEE
WHERE HIRE_DATE BETWEEN '90/01/01' AND '01/01/01';

SELECT SALARY AS "급여"
FROM EMPLOYEE
WHERE EMP_NAME = '전지연';

SELECT *
FROM EMPLOYEE
WHERE PHONE NOT LIKE '%3%';

SELECT *
FROM EMPLOYEE
WHERE EMP_NAME NOT LIKE '이%';


-- 실습 문제 3

-- 문제 1
SELECT *
FROM EMPLOYEE
WHERE EMP_NAME LIKE '%연';

-- 문제 2
SELECT EMP_NAME, PHONE
FROM EMPLOYEE
WHERE PHONE NOT LIKE '010%';

DESC EMPLOYEE;

-- 문제 3
SELECT *
FROM EMPLOYEE
WHERE  (EMAIL LIKE '%s%') AND (DEPT_CODE LIKE 'D9' OR  DEPT_CODE LIKE 'D6') AND (HIRE_DATE BETWEEN '90/01/01' AND '00/12/01') AND (SALARY >= 2700000);

-- 보너스가 없는 사람
SELECT EMP_NAME
FROM EMPLOYEE
WHERE BONUS IS NULL;

SELECT EMP_NAME
FROM EMPLOYEE
WHERE MANAGER_ID IS NULL AND DEPT_CODE IS NULL;

SELECT EMP_NAME
FROM EMPLOYEE
WHERE DEPT_CODE IS NULL AND BONUS IS NOT NULL;

SELECT *
FROM EMPLOYEE
WHERE DEPT_CODE IN('D6', 'D9');


SELECT EMP_NAME AS "이름", SALARY || '원' AS "급여"
FROM EMPLOYEE
WHERE JOB_CODE IN ('J7', 'J2') AND (SALARY > 2000000);

SELECT EMP_ID AS "ID"
FROM EMPLOYEE
ORDER BY EMP_ID DESC;

SELECT *
FROM EMPLOYEE
ORDER BY  1 DESC;

-- 실습 문제 4
-- 문제1.
-- 입사일이 5년 이상, 10년 이하인 직원의 이름,주민번호,급여,입사일을 검색하여라

-- 문제2.
-- 재직중이 아닌 직원의 이름,부서코드를 검색하여라 (퇴사 여부 : ENT_YN)

-- 문제3.
-- 근속년수가 10년 이상인 직원들을 검색하여
-- 출력 결과는 이름,급여,근속년수(소수점X)를 근속년수가 오름차순으로 정렬하여 출력하여라
-- 단, 급여는 50% 인상된 급여로 출력되도록 하여라.

-- 문제4.
-- 입사일이 99/01/01 ~ 10/01/01 인 사람 중에서 급여가 2000000 원 이하인 사람의
-- 이름,주민번호,이메일,폰번호,급여를 검색 하시오

-- 문제5.
-- 급여가 2000000원 ~ 3000000원 인 여직원 중에서 4월 생일자를 검색하여
-- 이름,주민번호,급여,부서코드를 주민번호 순으로(내림차순) 출력하여라
-- 단, 부서코드가 null인 사람은 부서코드가 '없음' 으로 출력 하여라.

-- 문제6.
-- 남자 사원 중 보너스가 없는 사원의 오늘까지 입사일을 측정하여
-- 1000일 마다(소수점 제외)
-- 급여의 10% 보너스를 계산하여 이름,특별 보너스 (계산 금액) 결과를 출력하여라.
-- 단, 이름 순으로 오름 차순 정렬하여 출력하여라.

SELECT EMP_NAME, EMP_NO, SALARY, HIRE_DATE
FROM EMPLOYEE
WHERE (SYSDATE - HIRE_DATE) / 365  BETWEEN 5 AND 10;

SELECT EMP_NAME, DEPT_CODE,
            ABS((SYSDATE - ENT_DATE) -  (SYSDATE - HIRE_DATE )) AS "근무일 수", HIRE_DATE
FROM EMPLOYEE
WHERE ENT_YN NOT LIKE 'N';

SELECT EMP_NAME, SALARY * 1.5 ,FLOOR((SYSDATE - HIRE_DATE) / 365) AS "근속년수"
FROM EMPLOYEE
WHERE   (SYSDATE - HIRE_DATE) / 365  >= 10
ORDER BY 3;

SELECT EMP_NAME, EMP_NO, EMAIL, PHONE, SALARY
FROM EMPLOYEE
WHERE SALARY <= 2000000 AND HIRE_DATE BETWEEN '99/01/01' AND '10/01/01';

SELECT EMP_NAME, EMP_NO, SALARY, NVL(DEPT_CODE, '없음')
FROM EMPLOYEE
WHERE (SALARY BETWEEN 2000000 AND 3000000) AND (EMP_NO LIKE '___4___2%')
ORDER BY 2 DESC;

SELECT EMP_NAME AS "이름",  (SALARY * ( FLOOR(FLOOR(SYSDATE - HIRE_DATE) / 1000 ) * 0.1)) || '원' AS "특별 보너스"
FROM EMPLOYEE
WHERE (EMP_NO LIKE '_______1%')  AND BONUS IS NULL
ORDER BY 1;
