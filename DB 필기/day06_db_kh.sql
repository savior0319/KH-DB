/* 최대 값 (= 5000000) 보다 작은 값 */
SELECT EMP_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY < ANY(2000000, 5000000); 

/* 최소 값 (= 2000000) 보다 큰 값 */
SELECT EMP_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY > ANY(2000000, 5000000); 

/* J3 코드를 가진 사람의 급여들을 비교 */
SELECT SALARY
FROM EMPLOYEE
WHERE JOB_CODE LIKE 'J3';

/* J3 코드를 가진 사람들의 급여 중에서 가장 작은 사람보다 큰 급여들을 출력 */
SELECT EMP_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY > ANY(
SELECT SALARY 
FROM EMPLOYEE 
WHERE JOB_CODE LIKE 'J3');

/* D1 또는 D5 부서코드를 가지고 있는 사원 들의 급여 중에서 
가장 높은 급여보다 작은 모든 사원들의 이름, 급여, 부서코드를 출력하여라 */
SELECT  EMP_NAME "이름", 
TO_CHAR(SALARY, 'L999,999,999') "급여", 
NVL(DEPT_CODE, '부서X') "부서코드"
FROM EMPLOYEE
WHERE SALARY < ANY(
SELECT SALARY
FROM EMPLOYEE
WHERE DEPT_CODE IN ('D1', 'D5'));

/* 서브쿼리에서 나온 결과들 중에서 하나라도 작다면 (< ANY)*/

/* 부서별 평균 급여를 조사하였을 때 가장 낮은 부서의 급여보다
높거나 같은 모든 사원들의 이름, 급여, 부서명을 출력하시오*/
SELECT EMP_NAME "이름", 
TO_CHAR(SALARY, 'L999,999,999') "급여",
NVL(DEPT_TITLE, '부서없음') "부서명"
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID(+)
AND SALARY >= ANY(SELECT AVG(SALARY)  FROM EMPLOYEE GROUP BY DEPT_CODE);


/* ALL (2000000 보다 크고 5000000보다도 큰 SALARY) */
SELECT EMP_NAME, SALARY
 FROM EMPLOYEE
WHERE SALARY > ALL(2000000, 5000000);


/* 실습 D2 부서의 모든사원보다 적은 급여를 받는 사원을 조회 */
SELECT EMP_NAME "사원"
FROM EMPLOYEE
WHERE SALARY < ALL(SELECT SALARY FROM EMPLOYEE WHERE DEPT_CODE IN ('D2'));

/* 보너스 포인트 3.0 이상인 사원들이 있다면
모든 사원의 정보를 출력해 주어라*/
SELECT *
FROM EMPLOYEE
WHERE EXISTS (SELECT BONUS FROM EMPLOYEE WHERE BONUS >= 0.3);

/* 보너스율이 1이상인 사원이 없다면
모든 사원의 이름, 급여를 출력하되 10% 인상된 급여로 출력하여라
보너스율이 1이상인 사원이 있다면 출력 X*/
SELECT EMP_NAME, SALARY * 1.1
FROM EMPLOYEE 
WHERE NOT EXISTS (SELECT BONUS FROM EMPLOYEE WHERE BONUS >= 1);

/* 회사에서 퇴사한 여직원가 같은 부서 및 직급인 사원을 검색 */
SELECT EMP_NAME
FROM EMPLOYEE
WHERE (DEPT_CODE, JOB_CODE) IN (SELECT DEPT_CODE, JOB_CODE
FROM EMPLOYEE
WHERE ENT_YN LIKE 'Y' AND SUBSTR(EMP_NO, 8, 1) LIKE 2);


/* 실습문제 기술지원부에서 급여가 2,000,000원 직원의 이름, 부서코드, 급여, 부서의 지역명을 출력 */
SELECT EMP_NAME "이름", 
DEPT_CODE "부서코드", 
TO_CHAR(SALARY, 'L999,999,999') "급여", 
LOCAL_NAME "지역명"
FROM EMPLOYEE, LOCATION, DEPARTMENT
WHERE LOCAL_CODE LIKE LOCATION_ID 
AND DEPT_ID LIKE DEPT_CODE AND (DEPT_TITLE, SALARY) 
IN(SELECT DEPT_TITLE, SALARY FROM EMPLOYEE, DEPARTMENT 
WHERE DEPT_ID LIKE DEPT_CODE  AND DEPT_TITLE LIKE '기술지원부' AND SALARY LIKE 2000000);

/* 직급별 최소 급여를 받는 직원의 이름, 사번, 부서코드, 입사일, 연봉을 출력 */
SELECT EMP_NAME "이름", 
EMP_ID "사번", 
DEPT_CODE "부서코드", 
HIRE_DATE "입사일", 
TO_CHAR(SALARY * 12, 'L999,999,999') "연봉"
FROM EMPLOYEE
WHERE (JOB_CODE, SALARY)
IN (SELECT JOB_CODE, MIN(SALARY)
FROM EMPLOYEE 
GROUP BY JOB_CODE);


/* 상관쿼리 - (메인 쿼리를 서브쿼리의 비교 대상으로 사용)
관리자가 있는 사원들 중 관리자의 사번이 EMPLOYEE 테이블에 존재하는 
직원의 사번과 같을 때 직원의 사번, 이름, 소속부서, 관리자 사번을 조회*/
SELECT EMP_ID "사번",
EMP_NAME "이름",
DEPT_CODE "부서번호",
MANAGER_ID "매니저사번"
FROM EMPLOYEE E1
WHERE EXISTS (SELECT NULL 
FROM EMPLOYEE E2
WHERE E1.MANAGER_ID LIKE E2.EMP_ID);

/* 스칼라 서브쿼리 */
SELECT E.EMP_ID, E.EMP_NAME, E.MANAGER_ID,
NVL((SELECT E2.EMP_NAME
FROM EMPLOYEE E2
WHERE E.MANAGER_ID = E2.EMP_ID), '없음') AS "관리자명"
FROM EMPLOYEE E
ORDER BY 1;


/* 실습문제 
사원명, 부서코드, 부서별 평균임금을 스칼라 서브쿼리를 이용해서 출력*/
SELECT EMP_NAME,
DEPT_CODE,
(SELECT ROUND(AVG(SALARY), 0) FROM EMPLOYEE E2 WHERE  NVL(E1.DEPT_CODE, '없음') = NVL(E2.DEPT_CODE(+), '없음') GROUP BY E2.DEPT_CODE) "평균"
FROM EMPLOYEE E1;


/* 인라인 뷰 
월급이 3000000이상이고 부서코드가 D5, D9인 사원정보*/
SELECT *
FROM (SELECT EMP_NAME, SALARY, DEPT_CODE
FROM EMPLOYEE
WHERE SALARY >= 3000000)
WHERE DEPT_CODE IN ('D5', 'D9');


/* 급여 TOP 5 */
SELECT ROWNUM, 뷰.*
FROM (SELECT EMP_NAME, SALARY FROM EMPLOYEE ORDER BY SALARY DESC) "뷰"
WHERE ROWNUM <= 5;

/* WITH */
WITH TOP_N_SAL AS (SELECT EMP_NAME, SALARY FROM EMPLOYEE
ORDER BY SALARY DESC)
SELECT ROWNUM, TOP_N_SAL.*
FROM TOP_N_SAL
WHERE ROWNUM <= 5;

WITH TOP_N AS (SELECT ROW_NUMBER() OVER(ORDER BY SALARY DESC) AS "순위", EMP_NAME, SALARY
FROM EMPLOYEE)
SELECT *
FROM TOP_N;


@ 실습 문제

문제1
기술지원부에 속한 사람들의 사람의 이름,부서코드,급여를 출력하시오

SELECT EMP_NAME, DEPT_ID, SALARY
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID AND DEPT_TITLE LIKE '기술지원부';

문제2
기술지원부에 속한 사람들 중 가장 연봉이 높은 사람의 이름,부서코드,급여를 출력하시오

SELECT *
FROM (SELECT EMP_NAME, DEPT_ID, SALARY
FROM EMPLOYEE, DEPARTMENT
WHERE DEPT_CODE = DEPT_ID AND DEPT_TITLE LIKE '기술지원부'
ORDER BY 3 DESC)
WHERE ROWNUM = 1;

문제3
매니저가 있는 사원중에 월급이 전체사원 평균을 넘고 
사번,이름,매니저 이름,월급(만원단위부터)을 구하시오
 * 단, JOIN을 이용하시오
 
SELECT E1.EMP_ID "사원번호", 
       E1.EMP_NAME "직원명", 
       (SELECT E2.EMP_NAME 
        FROM   EMPLOYEE E2 
        WHERE  E1.MANAGER_ID = E2.EMP_ID) "매니저", 
       SALARY "급여"
FROM   EMPLOYEE E1 
WHERE  E1.MANAGER_ID IS NOT NULL 
       AND E1.SALARY > (SELECT AVG(SALARY) 
                        FROM   EMPLOYEE); 


문제4
각 직급마다 급여 등급이 가장 높은 직원의 이름, 직급코드, 급여, 급여등급 조회

SELECT E1.EMP_NAME, E1.JOB_CODE, E1.SALARY, E1.SAL_LEVEL
FROM EMPLOYEE E1
WHERE (E1. JOB_CODE, E1.SAL_LEVEL) 
IN (SELECT E2.JOB_CODE, MIN(E2.SAL_LEVEL)
FROM EMPLOYEE E2
GROUP BY E2.JOB_CODE);


문제5
 부서별 평균 급여가 2200000 이상인 부서명, 평균 급여 조회
 단, 평균 급여는 소수점 버림
 
 SELECT DEPT_TITLE, FLOOR(AVG(SALARY))
 FROM EMPLOYEE, DEPARTMENT
 WHERE DEPT_ID(+) = DEPT_CODE
 GROUP BY DEPT_CODE, DEPT_TITLE
 HAVING AVG(SALARY) > 2200000
 ORDER BY 2;
 
 
문제6
직급의 연봉 평균보다 적게 받는 여자사원의
사원명,직급코드,부서코드,연봉을 이름 오름차순으로 조회하시오
연봉 계산 => (급여+(급여*보너스))*12  

SELECT EMP_NAME "이름",
      JOB_CODE "직급",
      DEPT_CODE "부서코드",
      NVL((E1.SALARY + (E1.SALARY * E1.BONUS)) * 12, E1.SALARY * 12) "연봉"
FROM EMPLOYEE E1
WHERE SUBSTR(EMP_NO, 8, 1) LIKE 2
    AND  (JOB_CODE, ( NVL( (E1.SALARY + (E1.SALARY * E1.BONUS) ) * 12, E1.SALARY * 12))) IN (SELECT JOB_CODE, AVG(NVL( (E1.SALARY + (E1.SALARY * E1.BONUS) ) * 12, E1.SALARY * 12))
    FROM EMPLOYEE E2 GROUP BY E2.JOB_CODE, E1.JOB_CODE 
    HAVING
        NVL((E1.SALARY + (E1.SALARY * E1.BONUS) ) * 12, E1.SALARY * 12) 
        < AVG(NVL( (E2.SALARY + (E2.SALARY * E2.BONUS) ) * 12, E2.SALARY * 12)));
