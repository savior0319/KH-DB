
@ LENGTH
-> 주어진 컬럼 값 / 문자열의 길이 (문자 개수)를 반환하는 함수

──────────────────────────────────────────────────────────────────────────────────────────────────
작성법                     리턴값 타입          파라미터 (인자 값)
──────────────────────────────────────────────────────────────────────────────────────────────────
LENGTH(COL | STRING)       NUMBER
──────────────────────────────────────────────────────────────────────────────────────────────────

ex)
SELECT LENGTH (EMP_NAME)
FROM EMPLOYEE;


@ LENGTHB
-> 주어진 컬럼 값/문자열의 길이(BYTE)를 반환하는 함수

──────────────────────────────────────────────────────────────────────────────────────────────────
작성법                     리턴값 타입          파라미터 (인자 값)
──────────────────────────────────────────────────────────────────────────────────────────────────
LENGTHB(COL | STRING)      NUMBER              CHARACTER 타입의 컬럼 또는 임의의 문자열
──────────────────────────────────────────────────────────────────────────────────────────────────

ex)
SELECT EMP_NAME, LENGTH(EMP_NAME), LENGTHB(EMP_NAME)
FROM EMPLOYEE;

@ INSTR
-> 찾는 문자(열)이 지정한 위치부터 지정한 횟수만큼 나타난 시작 위치를 반홪ㄴ

──────────────────────────────────────────────────────────────────────────────────────────────────
작성법
──────────────────────────────────────────────────────────────────────────────────────────────────
INSTR(STRING, STR, [POSITION, [OCCURRENCE]])     리턴값 타입
──────────────────────────────────────────────────────────────────────────────────────────────────

──────────────────────────────────────────────────────────────────────────────────────────────────
파라미터              설명
──────────────────────────────────────────────────────────────────────────────────────────────────
STRING              문자타입 컬럼 또는 문자열
STRING              찾으려는 문자(열)
POSITION            찾을 위치 시작 값(기본값 1)
                    POSTION > 0 : STRING의 시작부터 끝 방향으로 찾음
                    POSTION < 0 : STRING의 끝부터 시작 방향으로 찾음

OCCURRENCE          검색된[STR의 순번(기본값 1), 음수 사용 불가]
──────────────────────────────────────────────────────────────────────────────────────────────────

※ 시작위치의 INDEX 값은 0이 아닌 1부터 시작임

ex)
SELECT  INSTR('aha aaA HaHa', 'H', 1, 1) AS "INSTR"
FROM DUAL;

@ LPAD / RPAD
-> 주어진 컬럼 문자열에임의의 문자열을 왼쪽 / 오른쪽에 덧붙여 길이 길이 K의 문자열을
반환하는 함수

──────────────────────────────────────────────────────────────────────────────────────────────────
작성법                                                   리턴 값 타입
──────────────────────────────────────────────────────────────────────────────────────────────────
LPAD(STRING, N, [STR]/RPAD(STRING, N, (STR))             CHARACTER
──────────────────────────────────────────────────────────────────────────────────────────────────

──────────────────────────────────────────────────────────────────────────────────────────────────
파라미터                                                   설명
──────────────────────────────────────────────────────────────────────────────────────────────────
STRING                                             문자 타입 컬럼 드는 문자열
N                                                  반환할 문자(열)의 길이(바이트)
                                                   원래 STRING 길이보다 작다면 N만큼 잘라서 표시
STR                                                덧붙이려는 문자(열), 생략 시 공백 문자
──────────────────────────────────────────────────────────────────────────────────────────────────

ex)
  -- 왼쪽 패딩
  SELECT LPAD('mslove', 20, '@') AS "LPAD"
  FROM DUAL;

  SELECT LPAD(EMAIL, 20, ' ') AS "LPAD"
  FROM EMPLOYEE;


@ LTRIM / RTRIM
-> 주어진 컬럼이나 문자열의 왼쪽 혹은 오른쪽에서 지정한 STR에 포함된 모든 문자를 제거한 나머지를 반환한

──────────────────────────────────────────────────────────────────────────────────────────────────
작성법                                                  리턴 값 타입
──────────────────────────────────────────────────────────────────────────────────────────────────
LTRIM(STRING, STR) / RTRIM(STRING, STR)                CHARACTER
──────────────────────────────────────────────────────────────────────────────────────────────────

──────────────────────────────────────────────────────────────────────────────────────────────────
파리미터                                                  설명
──────────────────────────────────────────────────────────────────────────────────────────────────
STRING                                             문자 타입 컬럼 또는 문자열
STR                                                제거하려는 문자(열), 생략하면 공백문자
──────────────────────────────────────────────────────────────────────────────────────────────────

ex)
  SELECT LTRIM('           KHLOVE', ' ') AS "LTRIM"
  FROM DUAL;

  SELECT LTRIM('0000000000HAHA', '0') AS "LTRIM"
  FROM DUAL;

  SELECT LENGTH(LTRIM('____MSLOVE', '_')) AS "TRIM and LENGTH"
  FROM DUAL;

  SELECT LTRIM('1121321231231', '123') AS "LTRIM"
  FROM DUAL;

  SELECT RTRIM('1234', '4') AS "RTRIM"
  FROM DUAL;

@ TRIM
-> 주어진 컬럼이나 문자열의 앞/뒤/양쪽에 있는 지정한 문자를 제거하여 나머지를 반환


──────────────────────────────────────────────────────────────────────────────────────────────────
작성법                                                  리턴 값 타입
──────────────────────────────────────────────────────────────────────────────────────────────────
TRIM(STRING)                                            CHARACTER
TRIM(CHAR FROM STRING)                                  CHARACTER
(CHAR를 작성하지 않으면 기본적으로 공백을 삭제하라는 의미)
(위치 앞 또는 뒤를 지정하지 않으면 기본적으로 BOTH)

TRIM(LEADING | TRAILING | BOTH [CHAR] FROM STRING)     	CHARACTER
──────────────────────────────────────────────────────────────────────────────────────────────────


──────────────────────────────────────────────────────────────────────────────────────────────────
파라미터		                     	설명
──────────────────────────────────────────────────────────────────────────────────────────────────
STRING		           	  문자 타입 컬럼 또는 문자열
CHAR			              제거하려는 문자, 생략하면 공백문자
			                   ※ TRIM은 문자 1글자만 가능
LEADING		              TRIM할 CHAR의 위치를 지정
			                  앞(LEADING), 뒤(TRAILING), 양쪽(BOTH) 지정 가능 (기본값은 양쪽)
──────────────────────────────────────────────────────────────────────────────────────────────────

ex)
SELECT TRIM('  KH  ') AS "TRIM"
FROM DUAL;

SELECT TRIM('1' FROM '1KH1') AS "TRIM"
FROM DUAL;

SELECT TRIM(LEADING '1' FROM '1KH1') AS "TRIM"
FROM DUAL;

SELECT TRIM(TRAILING '1' FROM '1KH1') AS "TRIM"
FROM DUAL;

SELECT TRIM(BOTH '1' FROM '1KH1') AS "TRIM"
FROM DUAL;


@ SUBSTR
-> 컬럼이나 문자열에서 지정한 위치부터 지정한 개수의 문자열을 잘라내어 리턴하는 함수

──────────────────────────────────────────────────────────────────────────────────────────────────
작성법                                     리턴값 타입
──────────────────────────────────────────────────────────────────────────────────────────────────
SUBSTR(STRING, POSTION,[LENGTH])           CHARACTER
──────────────────────────────────────────────────────────────────────────────────────────────────

──────────────────────────────────────────────────────────────────────────────────────────────────
파라미터                                    설명
──────────────────────────────────────────────────────────────────────────────────────────────────
STRING                              문자 타입 컬럼 또는 문자열

POSTION                             문자열을 잘라낼 위치 양수이면 시작 방향에서 지정한 수 숫자만큼의
                                    위치를 의미 음수이면 끝 방향에서 지정한 수 만큼의 위치를 의미

                                    반환할 문자의 개수를 의미
LENGTH                              (생략시 문자열의 끝까지를 의미. 음수이면 NULL을 리턴)
──────────────────────────────────────────────────────────────────────────────────────────────────

ex)
SELECT SUBSTR('SHOWMETHEMONEY', 5, 2) AS "SUBSTR"
FROM DUAL;

SELECT SUBSTR('SHOWMETHEMONEY', 5) AS "SUBSTR"
FROM DUAL;

SELECT SUBSTR('SHOWMETHEMONEY', 1, 6) AS "SUBSTR"
FROM DUAL;

SELECT SUBSTR('SHOWMETHEMONEY', -8, 3) AS "SUBSTR"
FROM DUAL;

SELECT EMP_NAME "NAME", SUBSTR(EMP_NO, 1, 6) "BIRTH"
FROM EMPLOYEE;

@ LOWER / UPPER / INICAP

-> 컬럼의 문자 혹은 문자열을 소문자 / 대문자/ 단어별 첫 글자만 대문자로 변환하여
리턴하는 함수

──────────────────────────────────────────────────────────────────────────────────────────────────
작성법                                                     리턴값 타입
──────────────────────────────────────────────────────────────────────────────────────────────────
LOWER(STRING) / UPPER(STRING) / INITCAP(STRING)            CHARACTER
LOWER : 소문자
UPPER : 대문자
INITCAP : 각 단어 별 첫 글자만
──────────────────────────────────────────────────────────────────────────────────────────────────


──────────────────────────────────────────────────────────────────────────────────────────────────
파라미터                                    설명
──────────────────────────────────────────────────────────────────────────────────────────────────
STRING                              문자 타입 컬럼 또는 문자열
──────────────────────────────────────────────────────────────────────────────────────────────────

ex)
SELECT UPPER('Welcome To My Oracle World') as "UPPER"
FROM DUAL;

SELECT LOWER('Welcome To My Oracle World') as "LOWER"
FROM DUAL;

SELECT INITCAP('welcome to my oracle world') as "INITCAP"
FROM DUAL;

@ CONCAT
-> 컬럼의 문자 혹은 문자열을 두 개 전달 받아 하나로 합친 후 리턴하는 함수
-> || 와 같음
-> 만약에 3개 이상의 컬럼 (문자열 타입, 숫자 타입, 날짜 타입)을 결합 할 때에는 ||를 권장


──────────────────────────────────────────────────────────────────────────────────────────────────
작성법                                                     리턴값 타입
──────────────────────────────────────────────────────────────────────────────────────────────────
CONCAT(STRING, STRING)                                     CHARACTER
──────────────────────────────────────────────────────────────────────────────────────────────────


──────────────────────────────────────────────────────────────────────────────────────────────────
파라미터                                    설명
──────────────────────────────────────────────────────────────────────────────────────────────────
STRING                              문자 타입 컬럼 또는 문자열
──────────────────────────────────────────────────────────────────────────────────────────────────
